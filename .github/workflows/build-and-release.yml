name: Build and Release SwiftUI App (Unsigned)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build and Release (Unsigned)
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: |
          sudo xcode-select -s /Applications/Xcode_16.3.app/Contents/Developer 
          xcodebuild -version

      - name: Set up build variables
        id: build_vars
        run: |
          echo "SCHEME_NAME=fclk" >> $GITHUB_ENV # Replace YourSchemeName with your app's scheme
          echo "PROJECT_NAME=fclk.xcodeproj" >> $GITHUB_ENV # Replace with .xcodeproj or .xcworkspace
          echo "APP_NAME=Floating Clock" >> $GITHUB_ENV # Replace with the name of your .app bundle (often same as SCHEME_NAME)
          echo "ARCHIVE_PATH=$PWD/build/fclk.xcarchive" >> $GITHUB_ENV
          echo "EXPORT_PATH=$PWD/build/export" >> $GITHUB_ENV
          echo "EXPORT_OPTIONS_PLIST_PATH=./ExportOptions.plist" >> $GITHUB_ENV
          echo "RELEASE_ZIP_NAME=fclk-${{ github.ref_name }}.zip" >> $GITHUB_ENV

      # This version is for building without a developer account/signing.
      - name: Create ExportOptions.plist (for unsigned build)
        run: |
          cat << EOF > ${{ env.EXPORT_OPTIONS_PLIST_PATH }}
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>debugging</string>
              <key>signingStyle</key>
              <string>automatic</string>
              <key>teamID</key>
              <string>4HTW7KT2Z5</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>destination</key>
              <string>export</string> 
          </dict>
          </plist>
          EOF
        # Note: This ExportOptions.plist is configured for an unsigned build.
        # The resulting .app will not be signed and can typically only run on simulators
        # or on macOS systems with Gatekeeper settings adjusted (e.g., "Allow apps downloaded from: Anywhere").

      - name: Build Archive (unsigned)
        run: |
          xcodebuild archive \
            -project "${{ env.PROJECT_NAME }}" \
            -scheme "${{ env.SCHEME_NAME }}" \
            -configuration Release \
            -archivePath "${{ env.ARCHIVE_PATH }}" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
          # If using a .xcworkspace, change -project to -workspace
          # The flags CODE_SIGN_IDENTITY="", CODE_SIGNING_REQUIRED=NO, and CODE_SIGNING_ALLOWED=NO
          # instruct Xcode to skip the signing process.

      - name: Export .app from Archive
        run: |
          xcodebuild -exportArchive \
            -archivePath "${{ env.ARCHIVE_PATH }}" \
            -exportPath "${{ env.EXPORT_PATH }}" \
            -exportOptionsPlist "${{ env.EXPORT_OPTIONS_PLIST_PATH }}"

      - name: List exported files
        run: |
          echo "Listing contents of export path: ${{ env.EXPORT_PATH }}"
          ls -R "${{ env.EXPORT_PATH }}"
          echo "Expected .app path: ${{ env.EXPORT_PATH }}/${{ env.APP_NAME }}.app"
        # This step helps you see the structure of the exported files.

      - name: Zip the .app
        run: |
          cd "${{ env.EXPORT_PATH }}"
          # Ensure the APP_NAME variable correctly reflects the name of the .app directory
          # If the .app is inside a subdirectory (e.g., SCHEME_NAME/), adjust the path.
          zip -r -X "$GITHUB_WORKSPACE/${{ env.RELEASE_ZIP_NAME }}" "${{ env.APP_NAME }}.app"
          echo "Zipped file created: $GITHUB_WORKSPACE/${{ env.RELEASE_ZIP_NAME }}"

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2 
        with:
          tag_name: ${{ github.ref_name }} 
          name: Release ${{ github.ref_name }} (Unsigned)
          body: |
            Automated unsigned release for tag ${{ github.ref_name }}.
            This app is NOT signed.
            Find the installable app artifact (${{ env.RELEASE_ZIP_NAME }}) in the assets below.
          draft: false 
          prerelease: false 
          files: | 
            ${{ env.RELEASE_ZIP_NAME }}
